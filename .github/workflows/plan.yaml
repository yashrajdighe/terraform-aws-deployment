name: terraform-plan

on:
  workflow_call:
    inputs:
      TF_VAR_env:
        type: string
        required: true
      TERRAFORM_VERSION:
        type: string
        required: true
    secrets:
      AWS_CLI_ASSUME_ROLE:
        required: true
      TF_STATE_BUCKET_NAME:
        required: true
      TF_STATE_BUCKET_REGION:
        required: true

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
    env:
      TF_VAR_env: ${{ inputs.TF_VAR_env }}
    steps:
    - name: Configure AWS Credentials
      id: aws-cli-creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_CLI_ASSUME_ROLE }}
        output-credentials: true
    - name: set credentials
      working-directory: .
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ steps.aws-cli-creds.outputs.aws-access-key-id }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ steps.aws-cli-creds.outputs.aws-secret-access-key }}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.TERRAFORM_VERSION }}
        terraform_wrapper: false
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    - name: Terraform Init
      id: init
      run: |
        terraform init \
        -backend-config="bucket=${{ secrets.TF_STATE_BUCKET_NAME }}" \
        -backend-config="key=terraform-aws-deployment/$TF_VAR_env/terraform.tfstate" \
        -backend-config="region=${{ secrets.TF_STATE_BUCKET_REGION }}"
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
